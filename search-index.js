var searchIndex = JSON.parse('{\
"tydi_db":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Database","borrow","borrow_mut","component_identifier","components","default","fmt_index","for_each_query","from","group_storage","instance_identifier","instance_ports","instances","intern_component","intern_connection","intern_field","intern_identifier","intern_instance","intern_instance_port","intern_logical_type","intern_module","intern_net","intern_port","intern_type","into","lookup_intern_component","lookup_intern_connection","lookup_intern_field","lookup_intern_identifier","lookup_intern_instance","lookup_intern_instance_port","lookup_intern_logical_type","lookup_intern_module","lookup_intern_net","lookup_intern_port","lookup_intern_type","maybe_changed_since","module_identifier","modules","nets","ops_database","ops_salsa_runtime","ops_salsa_runtime_mut","port_identifier","ports","project","set_project","set_project_with_durability","try_from","try_into","type_id","wires"],"q":["tydi_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["id",3,[["component",3]]]],["arc",3,[["identifier",3]]]],[[["id",3,[["module",3]]]],["arc",3,[["vec",3,[["id",3,[["component",3]]],["global",3]]]]]],[[],["database",3]],[[["databasekeyindex",3],["formatter",3]],["result",6]],[[["fnmut",8]]],[[]],[[]],[[["id",3,[["instance",3]]]],["arc",3,[["identifier",3]]]],[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["instanceport",3],["global",3]]]]]],[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["id",3,[["instance",3]]],["global",3]]]]]],[[["component",3]],["id",3,[["component",3]]]],[[["connection",3]],["id",3,[["connection",3]]]],[[["field",3]],["id",3,[["field",3]]]],[[["identifier",3]],["id",3,[["identifier",3]]]],[[["instance",3]],["id",3,[["instance",3]]]],[[["instanceport",3]],["id",3,[["instanceport",3]]]],[[["logicaltype",4]],["id",3,[["logicaltype",4]]]],[[["module",3]],["id",3,[["module",3]]]],[[["net",4]],["id",3,[["net",4]]]],[[["port",3]],["id",3,[["port",3]]]],[[["type",4]],["id",3,[["type",4]]]],[[]],[[["id",3,[["component",3]]]],["component",3]],[[["id",3,[["connection",3]]]],["connection",3]],[[["id",3,[["field",3]]]],["field",3]],[[["id",3,[["identifier",3]]]],["identifier",3]],[[["id",3,[["instance",3]]]],["instance",3]],[[["id",3,[["instanceport",3]]]],["instanceport",3]],[[["id",3,[["logicaltype",4]]]],["logicaltype",4]],[[["id",3,[["module",3]]]],["module",3]],[[["id",3,[["net",4]]]],["net",4]],[[["id",3,[["port",3]]]],["port",3]],[[["id",3,[["type",4]]]],["type",4]],[[["databasekeyindex",3],["revision",3]],["bool",15]],[[["id",3,[["module",3]]]],["arc",3,[["identifier",3]]]],[[],["arc",3,[["vec",3,[["id",3,[["module",3]]],["global",3]]]]]],[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["net",4],["global",3]]]]]],[[],["database",8]],[[],["runtime",3]],[[],["runtime",3]],[[["id",3,[["port",3]]]],["arc",3,[["identifier",3]]]],[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["port",3],["global",3]]]]]],[[],["arc",3,[["project",3]]]],[[["arc",3,[["project",3]]]]],[[["arc",3,[["project",3]]],["durability",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["wire",3],["global",3]]]]]]],"p":[[3,"Database"]]},\
"tydi_designs":{"doc":"Pre-defined Tydi High-Level Intermediate representation …","t":[5,5,5],"n":["component_loop","duplicated_components","types"],"q":["tydi_designs","",""],"d":["Returns a design with one package with two components. The …","Returns a design with two packages with one component …","Return a design with various type configurations."],"i":[0,0,0],"f":[[[],["database",3]],[[],["database",3]],[[],["database",3]]],"p":[]},\
"tydi_dot":{"doc":"A DOT back-end to visualize the High-level Intermediate …","t":[8,3,11,11,10,11,11,11,11,0,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,12,0,12,12,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,17,17,17,17,17,17],"n":["Dot","DotProject","borrow","borrow_mut","dottify","fmt","from","into","new","style","to_string","try_from","try_into","type_id","EdgeStyles","NodeStyle","NodeStyles","Style","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","colors","component","connection","default","default","default","default","edges","field","from","from","from","from","instance","instance_port","into","into","into","into","logical_type","module","net_port","nodes","port","reference","root","show_meta","style","title","title_color","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","wire","BLACK","BLUE","GRAY","GREEN","RED","YELLOW"],"q":["tydi_dot","","","","","","","","","","","","","","tydi_dot::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tydi_dot::style::colors","","","","",""],"d":["Trait to traverse through High-level Intermediate …","A Graphviz DOT graph representation of a high-level …","","","Write the DOT representation of self to a formatter.","","","","Create a new DotProject.","Utilities to help styling DOT Graphs of the high-level …","","","","","Style of edges.","Style of a node.","Collection of styles for the HIR nodes.","HIR Graphviz DOT representation style.","","","","","","","","","Style of an edge from some parent to a child node.","Some basic colors","Component node style.","Connection node style.","","","","","Styles of the various edge types.","Field node style.","","","","","Instance node style.","Net::InstancePort node style.","","","","","LogicalType node style.","Module node style.","Net::Port node style.","Styles of the various node types.","Port node style.","Style of a reference from some node to another node.","Root node style.","Wether to display node metadata.","Miscelleaneous node style.","Node title.","Node title color.","","","","","","","","","Type node style.","","","","","Net::Wire node style.","Black color","Blue color","Gray color","Green color","Red color","Yellow color"],"i":[0,0,1,1,2,1,1,1,1,0,1,1,1,1,0,0,0,0,3,4,5,6,3,4,5,6,3,0,5,5,3,4,5,6,6,5,3,4,5,6,5,5,3,4,5,6,5,5,5,6,5,3,5,4,4,4,4,3,4,5,6,3,4,5,6,5,3,4,5,6,5,0,0,0,0,0,0],"f":[null,null,[[]],[[]],[[["formatter",3],["database",3],["style",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["database",3],["style",3]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[],["style",3]],null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null],"p":[[3,"DotProject"],[8,"Dot"],[3,"EdgeStyles"],[3,"NodeStyle"],[3,"NodeStyles"],[3,"Style"]]},\
"tydi_hcl":{"doc":"A user-friendly Rust API to construct a Tydi High-level …","t":[5],"n":["ident"],"q":["tydi_hcl"],"d":["Intern an identifier and return its id."],"i":[0],"f":[[[["hir",8],["into",8,[["string",3]]]],["id",3,[["identifier",3]]]]],"p":[]},\
"tydi_hir":{"doc":"The Tydi High-level Intermediate Representation.","tn":["ComponentIdentifierQuery","ComponentsQuery","Hir","HirGroupStorage__","HirStorage","InstanceIdentifierQuery","InstancePortsQuery","InstancesQuery","InternComponentLookupQuery","InternComponentQuery","InternConnectionLookupQuery","InternConnectionQuery","InternFieldLookupQuery","InternFieldQuery","InternIdentifierLookupQuery","InternIdentifierQuery","InternInstanceLookupQuery","InternInstancePortLookupQuery","InternInstancePortQuery","InternInstanceQuery","InternLogicalTypeLookupQuery","InternLogicalTypeQuery","InternModuleLookupQuery","InternModuleQuery","InternNetLookupQuery","InternNetQuery","InternPortLookupQuery","InternPortQuery","InternTypeLookupQuery","InternTypeQuery","Module","ModuleIdentifierQuery","ModulesQuery","NetsQuery","PortIdentifierQuery","PortsQuery","Project","ProjectQuery","WiresQuery","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","component","component_identifier","component_identifier","components","components","components","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","equivalent","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","identifier","identifier","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","instance_identifier","instance_identifier","instance_ports","instance_ports","instances","instances","intern_component","intern_component","intern_connection","intern_connection","intern_field","intern_field","intern_identifier","intern_identifier","intern_instance","intern_instance","intern_instance_port","intern_instance_port","intern_logical_type","intern_logical_type","intern_module","intern_module","intern_net","intern_net","intern_port","intern_port","intern_type","intern_type","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lookup_intern_component","lookup_intern_component","lookup_intern_connection","lookup_intern_connection","lookup_intern_field","lookup_intern_field","lookup_intern_identifier","lookup_intern_identifier","lookup_intern_instance","lookup_intern_instance","lookup_intern_instance_port","lookup_intern_instance_port","lookup_intern_logical_type","lookup_intern_logical_type","lookup_intern_module","lookup_intern_module","lookup_intern_net","lookup_intern_net","lookup_intern_port","lookup_intern_port","lookup_intern_type","lookup_intern_type","maybe_changed_since","module_identifier","module_identifier","modules","modules","modules","ne","ne","net","nets","nets","new","new","port_identifier","port_identifier","ports","ports","project","project","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","set_project","set_project_with_durability","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","wires","wires","with_component","with_type","Component","Instance","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","component","connections","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","identifier","identifier","instances","into","into","metadata","ne","ne","nets","new","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","with_connection","with_instance","with_metadata","with_net","0","Identifier","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from","hash","into","ne","to_owned","to_string","try_from","try_into","type_id","Connection","Input","InstancePort","InstancePort","Mode","Net","Output","Port","Port","Wire","Wire","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","identifier","identifier","instance","into","into","into","into","into","into","mode","ne","ne","ne","ne","ne","new","new","port","sink","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","Anon","Bits","Direction","Field","Forward","Group","Group","LogicalType","Named","NamedType","Null","Reverse","Type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","direction","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","identifier","identifier","into","into","into","into","into","into","ne","ne","ne","ne","ne","new","new","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0"],"q":["tydi_hirtydi_hir::component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tydi_hir::identifier","","","","","","","","","","","","","","","","","","","","tydi_hir::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tydi_hir::net::Net","","","tydi_hir::type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tydi_hir::type::LogicalType","","tydi_hir::type::Type",""],"d":["","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","A collection of components, constants and types.","","","","","","The root node of a hardware design description.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tydi components.","Get the identifier of a component.","","Obtain all components from a modules.","The components that this module describes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tydi identifiers.","The identifier of the module.","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Get the identifier of an instance.","","Obtain all InstancePort nets of a component.","","Obtain all instances of a component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the identifier of a modules.","","Obtain all modules.","The modules within a project.","","","","Tydi nets (e.g. wires and ports) and connections between …","Obtain all nets of a component.","","Create an empty module.","","Get the identifier of a port.","","Obtain all Port nets of a component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value of the <code>project</code> input.","Set the value of the <code>project</code> input and promise that its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tydi type system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The types that this module describes.","Obtain all Wire nets of a component.","","Append a component to the module.","Append a type to the module.","A component. Represents a hierarchical entity in a …","An instance of a component.","","","","","","","","","The component that is instantiated.","The connections within a component.","","","","","","","","","","","The identifier of the component.","The identifier of the instance.","The instances within a component.","","","Component metadata.","","","The nets of a component, including its ports.","Create an empty component.","Create a new instance.","","","","","","","","","The types used within a component.","Append a connection to the component.","Append an instance to the component.","Append key-value metadata to the component.","Append a net to the component.","","An identifier.","","","","","","","","","","Construct a new identifier from something that can be …","","","","","","","","","A connection between two nets.","An input.","A port of an instance.","The port of an instance.","An I/O mode.","A net that is sinked and sourced.","An output.","A port of a component.","A port of the component itself.","A wire inside a component.","A wire inside the component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier of the wire.","The identifier of the port.","The instance.","","","","","","","The mode of the port.","","","","","","Create a new InstancePort.","Create a new connection between source and sink.","The port of the instance.","The sinking net.","The sourcing net.","","","","","","","","","","","","","","","","","","","The type of the wire.","The type of the port.","","","","","","","","","","An anonymous type.","The Bits type representing a positive number of bits.","The direction of things that have directions, such as …","The field of a group or union.","Forward direction (default).","The Group type.","The Group type representing a product type of multiple …","The Tydi Logical Type.","A named type.","A type with a name.","The Null type with single-valued data which is always null.","Reverse direction.","A Tydi Type.","","","","","","","","","","","","","","","","","","","","","","","","","","Direction of the field w.r.t. whatever uses its parent …","","","","","","","","","","","","","The fields of the Group.","","","","","","","","","","","","","","","","","","","The name of the type.","Field name.","","","","","","","","","","","","Create a new NamedType.","Create a new field.","Create a new Group type.","","","","","","","","","","","","","","","","","","","The type definition","Reference to the field type.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,2,1,2,0,39,4,39,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,2,1,2,28,29,30,31,32,33,34,35,36,37,38,1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,4,4,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,2,0,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,39,4,4,39,4,39,1,4,1,2,0,39,4,2,4,39,4,39,4,39,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,1,2,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,2,39,4,2,2,0,0,40,41,40,41,40,41,40,41,41,40,40,41,40,41,40,41,40,41,40,41,40,41,40,40,41,40,40,41,40,40,41,40,41,40,41,40,41,40,41,40,40,40,40,40,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,0,44,0,0,43,0,44,0,44,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,45,46,47,43,45,46,47,44,48,46,45,46,47,44,48,47,48,47,48,48,43,45,46,47,44,48,43,45,46,47,44,48,43,45,46,47,44,48,45,46,43,45,46,47,44,48,49,50,51,52,53,0,0,54,0,53,0,52,0,53,54,0,55,54,52,56,57,53,55,54,52,56,57,53,55,54,52,56,57,53,55,54,52,56,57,53,54,56,55,54,52,56,57,53,55,54,52,56,57,53,57,55,54,52,56,57,53,55,54,52,56,57,53,55,54,52,56,57,53,55,56,55,54,52,56,57,53,55,52,56,57,53,55,56,57,55,54,52,56,57,53,55,54,52,56,57,53,55,54,52,56,57,53,55,56,55,54,52,56,57,53,58,59,60,61],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["project",3]],[[],["module",3]],[[]],[[]],null,[[["id",3,[["component",3]]]],["arc",3,[["identifier",3]]]],null,[[["id",3,[["module",3]]]],["arc",3,[["vec",3,[["id",3,[["component",3]]]]]]]],null,null,[[],["projectquery",3]],[[],["internmodulequery",3]],[[],["internmodulelookupquery",3]],[[],["interncomponentquery",3]],[[],["interncomponentlookupquery",3]],[[],["interninstancequery",3]],[[],["interninstancelookupquery",3]],[[],["internidentifierquery",3]],[[],["internidentifierlookupquery",3]],[[],["internportquery",3]],[[],["internportlookupquery",3]],[[],["internnetquery",3]],[[],["internnetlookupquery",3]],[[],["interninstanceportquery",3]],[[],["interninstanceportlookupquery",3]],[[],["internconnectionquery",3]],[[],["internconnectionlookupquery",3]],[[],["interntypequery",3]],[[],["interntypelookupquery",3]],[[],["internlogicaltypequery",3]],[[],["internlogicaltypelookupquery",3]],[[],["internfieldquery",3]],[[],["internfieldlookupquery",3]],[[],["modulesquery",3]],[[],["componentsquery",3]],[[],["instancesquery",3]],[[],["netsquery",3]],[[],["portsquery",3]],[[],["wiresquery",3]],[[],["instanceportsquery",3]],[[],["moduleidentifierquery",3]],[[],["componentidentifierquery",3]],[[],["portidentifierquery",3]],[[],["instanceidentifierquery",3]],[[["project",3]],["bool",15]],[[["module",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["hir",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytable",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["hir",8]],["querytablemut",3]],[[["id",3,[["instance",3]]]],["arc",3,[["identifier",3]]]],null,[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["instanceport",3]]]]]],null,[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["id",3,[["instance",3]]]]]]]],null,[[["component",3]],["id",3,[["component",3]]]],null,[[["connection",3]],["id",3,[["connection",3]]]],null,[[["field",3]],["id",3,[["field",3]]]],null,[[["identifier",3]],["id",3,[["identifier",3]]]],null,[[["instance",3]],["id",3,[["instance",3]]]],null,[[["instanceport",3]],["id",3,[["instanceport",3]]]],null,[[["logicaltype",4]],["id",3,[["logicaltype",4]]]],null,[[["module",3]],["id",3,[["module",3]]]],null,[[["net",4]],["id",3,[["net",4]]]],null,[[["port",3]],["id",3,[["port",3]]]],null,[[["type",4]],["id",3,[["type",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["id",3,[["component",3]]]],["component",3]],null,[[["id",3,[["connection",3]]]],["connection",3]],null,[[["id",3,[["field",3]]]],["field",3]],null,[[["id",3,[["identifier",3]]]],["identifier",3]],null,[[["id",3,[["instance",3]]]],["instance",3]],null,[[["id",3,[["instanceport",3]]]],["instanceport",3]],null,[[["id",3,[["logicaltype",4]]]],["logicaltype",4]],null,[[["id",3,[["module",3]]]],["module",3]],null,[[["id",3,[["net",4]]]],["net",4]],null,[[["id",3,[["port",3]]]],["port",3]],null,[[["id",3,[["type",4]]]],["type",4]],null,[[["hir",8],["databasekeyindex",3],["revision",3]],["bool",15]],[[["id",3,[["module",3]]]],["arc",3,[["identifier",3]]]],null,[[],["arc",3,[["vec",3,[["id",3,[["module",3]]]]]]]],null,null,[[["project",3]],["bool",15]],[[["module",3]],["bool",15]],null,[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["net",4]]]]]],null,[[["id",3,[["identifier",3]]]]],[[["u16",15]]],[[["id",3,[["port",3]]]],["arc",3,[["identifier",3]]]],null,[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["port",3]]]]]],null,[[],["arc",3,[["project",3]]]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["arc",3,[["project",3]]]]],[[["arc",3,[["project",3]]],["durability",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["id",3,[["component",3]]]],["arc",3,[["vec",3,[["wire",3]]]]]],null,[[["id",3,[["component",3]]]]],[[["id",3,[["type",4]]]]],null,null,[[]],[[]],[[]],[[]],[[],["component",3]],[[],["instance",3]],[[]],[[]],null,null,[[["component",3]],["bool",15]],[[["instance",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],null,[[["component",3]],["bool",15]],[[["instance",3]],["bool",15]],null,[[["id",3,[["identifier",3]]]]],[[["id",3,[["identifier",3]]],["id",3,[["component",3]]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["connection",3]]],[[["id",3,[["instance",3]]]]],[[["into",8,[["string",3]]],["into",8,[["string",3]]]]],[[["id",3,[["net",4]]]]],null,null,[[]],[[]],[[],["identifier",3]],[[]],[[["identifier",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["into",8,[["string",3]]]]],[[]],[[]],[[["identifier",3]],["bool",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mode",4]],[[],["wire",3]],[[],["port",3]],[[],["instanceport",3]],[[],["net",4]],[[],["connection",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mode",4]],["bool",15]],[[["wire",3]],["bool",15]],[[["port",3]],["bool",15]],[[["instanceport",3]],["bool",15]],[[["net",4]],["bool",15]],[[["connection",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["wire",3]],["bool",15]],[[["port",3]],["bool",15]],[[["instanceport",3]],["bool",15]],[[["net",4]],["bool",15]],[[["connection",3]],["bool",15]],[[["id",3,[["instance",3]]],["id",3,[["port",3]]]]],[[["id",3,[["net",4]]],["id",3,[["net",4]]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["namedtype",3]],[[],["direction",4]],[[],["type",4]],[[],["field",3]],[[],["group",3]],[[],["logicaltype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["namedtype",3]],["bool",15]],[[["direction",4]],["bool",15]],[[["type",4]],["bool",15]],[[["field",3]],["bool",15]],[[["group",3]],["bool",15]],[[["logicaltype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["namedtype",3]],["bool",15]],[[["type",4]],["bool",15]],[[["field",3]],["bool",15]],[[["group",3]],["bool",15]],[[["logicaltype",4]],["bool",15]],[[["id",3,[["identifier",3]]],["id",3,[["logicaltype",4]]]]],[[["id",3,[["identifier",3]]],["id",3,[["type",4]]],["direction",4]]],[[["vec",3,[["id",3,[["field",3]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[3,"Project"],[3,"Module"],[3,"HirStorage"],[3,"HirGroupStorage__"],[3,"ProjectQuery"],[3,"InternModuleQuery"],[3,"InternModuleLookupQuery"],[3,"InternComponentQuery"],[3,"InternComponentLookupQuery"],[3,"InternInstanceQuery"],[3,"InternInstanceLookupQuery"],[3,"InternIdentifierQuery"],[3,"InternIdentifierLookupQuery"],[3,"InternPortQuery"],[3,"InternPortLookupQuery"],[3,"InternNetQuery"],[3,"InternNetLookupQuery"],[3,"InternInstancePortQuery"],[3,"InternInstancePortLookupQuery"],[3,"InternConnectionQuery"],[3,"InternConnectionLookupQuery"],[3,"InternTypeQuery"],[3,"InternTypeLookupQuery"],[3,"InternLogicalTypeQuery"],[3,"InternLogicalTypeLookupQuery"],[3,"InternFieldQuery"],[3,"InternFieldLookupQuery"],[3,"ModulesQuery"],[3,"ComponentsQuery"],[3,"InstancesQuery"],[3,"NetsQuery"],[3,"PortsQuery"],[3,"WiresQuery"],[3,"InstancePortsQuery"],[3,"ModuleIdentifierQuery"],[3,"ComponentIdentifierQuery"],[3,"PortIdentifierQuery"],[3,"InstanceIdentifierQuery"],[8,"Hir"],[3,"Component"],[3,"Instance"],[3,"Identifier"],[4,"Mode"],[4,"Net"],[3,"Wire"],[3,"Port"],[3,"InstancePort"],[3,"Connection"],[13,"Port"],[13,"Wire"],[13,"InstancePort"],[4,"Type"],[4,"LogicalType"],[4,"Direction"],[3,"NamedType"],[3,"Field"],[3,"Group"],[13,"Bits"],[13,"Group"],[13,"Named"],[13,"Anon"]]},\
"tydi_intern":{"doc":"Intern support for Tydi.","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Id","as_intern_id","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from_intern_id","hash","into","to_owned","to_string","try_from","try_into","type_id"],"q":["tydi_intern","","","","","","","","","","","","","","","","","",""],"d":["Intern Id","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["internid",3]],[[]],[[]],[[],["id",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["internid",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Id"]]},\
"tydi_lexer":{"doc":"Lexer for Tydi.","t":[13,13,13,13,3,13,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11],"n":["Comment","Equals","Error","Identifier","Lexer","Semicolon","Streamlet","Token","TokenKind","Type","Whitespace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","into","into","into","into_iter","is_literal","is_literal","is_trivia","is_trivia","kind","lex","ne","new","next","range","text","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["tydi_lexer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Lexer produces tokens from a source input.","","","Token with kind and source text.","Tokens, the primitive productions used in the grammar …","","","","","","","","","","","","","","","","","","","","","","","","Returns true when the token is a literal token:","Returns true when the token is a literal token.","Returns true when the token is a trivia token:","Returns true when the token is a trivia token.","","","","Returns a new lexer for the given input.","","","","","","","","","","","","","",""],"i":[1,1,1,1,0,1,1,0,0,1,1,2,1,3,2,1,3,1,3,1,3,1,3,1,3,2,1,3,2,1,3,2,1,3,1,3,3,1,3,2,2,3,3,1,3,2,1,3,2,1,3,2,1,3],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["tokenkind",4]],[[],["token",3]],[[]],[[]],[[["tokenkind",4]],["bool",15]],[[["token",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["lexer",3]]],[[["token",3]],["bool",15]],[[["str",15]]],[[],["option",4]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"TokenKind"],[3,"Lexer"],[3,"Token"]]},\
"tydi_manifest":{"doc":"Manifest for Tydi projects.","t":[13,4,17,13,4,3,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Branch","Dependency","FILE_NAME","Git","GitReference","Manifest","Path","ProjectMetadata","Rev","Tag","authors","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","dependencies","description","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","name","ne","ne","ne","ne","project","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","git","path","reference","0","0","0"],"q":["tydi_manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tydi_manifest::Dependency","","","tydi_manifest::GitReference","",""],"d":["Reference to a branch.","A dependency specification pointing to another project.","The manifest file name (<code>tydi.toml</code>).","Git specifier for dependency. Specifies a git repository …","Git reference enumeration.","A project’s manifest with project metadata and …","Path specifier for dependency. Specifies a directory path …","A project with a name, authors and an optional description.","Reference to revision (SHA-1 hash).","Reference to a tag.","Returns the authors of the project.","","","","","","","","","","","","","","","","","Returns a reference to the map with dependencies, if there …","Returns the description of the project, if there is one.","","","","","","","","","","","","","","","","","","","","","Returns the name of the project.","","","","","Returns the project metadata.","","","","","","","","","","","","","","","","","","","","","Returns the version of the project.","Git repository url.","Path to local project.","Git reference used.","","",""],"i":[1,0,0,2,0,0,2,0,1,1,3,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,4,3,2,1,4,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,5,6,5,7,8,9],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["manifest",3]],[[],["projectmetadata",3]],[[],["dependency",4]],[[],["gitreference",4]],[[]],[[]],[[]],[[]],[[],["option",4,[["hashmap",3]]]],[[],["option",4,[["str",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["manifest",3]],["bool",15]],[[["projectmetadata",3]],["bool",15]],[[["dependency",4]],["bool",15]],[[["gitreference",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[["manifest",3]],["bool",15]],[[["projectmetadata",3]],["bool",15]],[[["dependency",4]],["bool",15]],[[["gitreference",4]],["bool",15]],[[],["projectmetadata",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["string",3]],null,null,null,null,null,null],"p":[[4,"GitReference"],[4,"Dependency"],[3,"ProjectMetadata"],[3,"Manifest"],[13,"Git"],[13,"Path"],[13,"Branch"],[13,"Tag"],[13,"Rev"]]},\
"tydi_syntax":{"doc":"","t":[13,13,13,13,13,13,13,13,13,6,6,4,6,6,6,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Comment","Equals","Error","Identifier","Root","Semicolon","Statement","Streamlet","StreamletDefinition","SyntaxElement","SyntaxElementChildren","SyntaxKind","SyntaxNode","SyntaxNodeChildren","SyntaxToken","Tydi","Type","TypeDefinition","Whitespace","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","eq","fmt","fmt","from","from","from","hash","into","into","kind_from_raw","kind_to_raw","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["tydi_syntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Syntax tokens and nodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,2,1,2,1,2,1,2,2,1,2,1,2,1,1,2,2,1,2,2,2,2,1,2,1,2,1,2,1,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["syntaxkind",4]],[[],["tydi",4]],[[]],[[]],[[["tydi",4]],["ordering",4]],[[["syntaxkind",4]],["bool",15]],[[["tydi",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["tokenkind",4]]],[[]],[[]],[[]],[[]],[[["syntaxkind",3]]],[[],["syntaxkind",3]],[[["tydi",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"SyntaxKind"],[4,"Tydi"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};